name: Deploy to Production

on:
    workflow_run:
        workflows: ['Build and Deploy Docker Images']
        types:
            - completed
        branches: [main]
    workflow_dispatch:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    deploy:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'
        environment: production

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Log in to Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Deploy to server
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  port: ${{ secrets.SSH_PORT || '22' }}
                  script: |
                      # Create app directory if it doesn't exist
                      mkdir -p /home/admin/scarlet-vertigo-app
                      cd /home/admin/scarlet-vertigo-app

                      # Login to GitHub Container Registry
                      echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

                      # Set environment variables
                      export GITHUB_REPOSITORY="${{ github.repository }}"

                      # Download docker-compose.prod.yml if it doesn't exist or update it
                      wget -O docker-compose.prod.yml "https://raw.githubusercontent.com/${{ github.repository }}/main/docker-compose.prod.yml"

                      # Pull latest images
                      docker-compose -f docker-compose.prod.yml pull

                      # Stop existing containers gracefully
                      docker-compose -f docker-compose.prod.yml down --remove-orphans

                      # Start containers with latest images
                      docker-compose -f docker-compose.prod.yml up -d

                      # Wait a moment for containers to start
                      sleep 10

                      # Clean up old images
                      docker image prune -f

                      # Show running containers
                      docker ps

                      # Show container logs for debugging (last 20 lines)
                      echo "=== API Logs ==="
                      docker-compose -f docker-compose.prod.yml logs --tail=20 api || true
                      echo "=== Dashboard Logs ==="
                      docker-compose -f docker-compose.prod.yml logs --tail=20 dashboard || true
                      echo "=== Frontend Logs ==="
                      docker-compose -f docker-compose.prod.yml logs --tail=20 scarlet-frontend || true
